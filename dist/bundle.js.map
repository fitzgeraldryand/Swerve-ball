{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./frontend/ball.js","webpack:///./frontend/game.js","webpack:///./frontend/paddle.js","webpack:///./frontend/tunnel.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACpGpB;AAAA;AAAiC;;AAEjC;AACA;AACA;AACA;AACA,sBAAsB,kDAAM;AAC5B;AACA;;AAEA;;;;;;;;;;;;;ACVA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/FtB;AAAA;AAAA;AAAA;AACA;AACiC;AACJ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAM;AAC9B,oBAAoB,gDAAI;AACxB,2BAA2B,kDAAM;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./frontend/game.js\");\n","const startRadius = 30;\n\nclass Ball {\n  constructor(stage, game, totalDistance, difficulty) {\n    this.stage = stage;\n    this.game = game;\n    this.totalDistance = totalDistance;\n    this.ball = new createjs.Shape();\n    this.ballRadius = startRadius;\n    this.direction = 1;\n    this.distance = 0;\n    this.draw(\"#5df942\", 400, 400);\n    this.xVelocity = 0;\n    this.yVelocity = 0;\n    this.xSpin = 5 * (Math.random() - 0.5);\n    this.ySpin = 5 * (Math.random() - 0.5);\n    this.rawX = 400;\n    this.rawY = 400;\n    this.farX = 400;\n    this.farY = 400;\n  }\n\n  draw(color, locationX = this.ball.x, locationY = this.ball.y) {\n    this.ball.graphics\n      .beginRadialGradientFill([\"#fafafa\",color], [0, 1], 8, -8, 3, 0, 0, this.ballRadius)\n      .drawCircle(0, 0, this.ballRadius);\n    this.ball.x = locationX;\n    this.ball.y = locationY;\n    this.stage.addChild(this.ball);\n    this.stage.update();\n  }\n\n  scaleBall() {\n    this.ball.scaleX = 1 - (this.distance * 3) / (4 * this.totalDistance);\n    this.ball.scaleY = 1 - (this.distance * 3) / (4 * this.totalDistance);\n    this.ballRadius = startRadius * this.ball.scaleX;\n    this.stage.update();\n  }\n\n  moveThroughTunnel() {\n    if (this.direction === 1) {\n      this.distance += 2;\n    } else if (this.direction === -1) {\n      this.distance -= 2;\n    }\n    this.scaleBall();\n    this.applySpin();\n    this.applyVelocity();\n    this.applyPerspective();\n    this.adjustForRadius();\n    // this.moveAroundTunnel();\n    this.stage.update();\n  }\n\n  // moveAroundTunnel() {\n  //   this.ball.x += this.xVelocity;\n  //   this.ball.y += this.yVelocity;\n  // }\n\n  adjustForRadius() {\n    if (this.rawX > 400) {\n      this.ball.x -= this.ballRadius * (this.rawX - 400)/312;\n    } else if (this.rawX < 400) {\n      this.ball.x += this.ballRadius * (400 - this.rawX)/312;\n    }\n\n    if (this.rawY > 400) {\n      this.ball.y -= this.ballRadius * (this.rawY - 400)/209;\n    } else if (this.rawY < 400) {\n      this.ball.y += this.ballRadius * (400 - this.rawY)/209;\n    }\n  }\n\n  applyPerspective() {\n    const distanceFactor = this.distance / this.totalDistance;\n\n    this.ball.x = this.rawX - (this.rawX - this.farX) * distanceFactor;\n    this.ball.y = this.rawY - (this.rawY - this.farY) * distanceFactor;\n  }\n\n\n  applySpin() {\n    if (this.direction === 1){\n     this.xVelocity -= this.xSpin / this.totalDistance;\n     this.yVelocity -= this.ySpin / this.totalDistance;\n    } else {\n     this.xVelocity += this.xSpin / this.totalDistance;\n     this.yVelocity += this.ySpin / this.totalDistance;\n    }\n  }\n\n applyVelocity() {\n    this.rawX += this.xVelocity;\n    this.farX = (this.rawX - 400) * 79/312 + 400;\n\n    this.rawY += this.yVelocity;\n    this.farY = (this.rawY - 400) * 53/209 + 400;\n  }\n}\n\nexport default Ball;\n","import Tunnel from './tunnel.js';\n\nclass Game {\n  constructor(difficulty) {\n    this.difficulty = difficulty;\n    this.stage = new createjs.Stage(\"canvas\");\n    this.tunnel = new Tunnel(this.stage, this, this.difficulty);\n  }\n}\n\nconst game = new Game();\n","const humanWidth = 124;\nconst humanHeight = 80;\nconst aiWidth = 38;\nconst aiHeight = 24;\n\nclass Paddle {\n  constructor(stage, game, type) {\n    this.stage = stage;\n    this.game = game;\n    this.type = type;\n    this.paddle = new createjs.Shape();\n    this.drawPaddle();\n    this.width = (this.type === 'Human' ? humanWidth : aiWidth);\n    this.height = (this.type === 'Human' ? humanHeight : aiHeight);\n    this.placeholderX = 400;\n    this.placeholderY = 400;\n  }\n\n  drawPaddle() {\n    if (this.type === 'Human') {\n      this.paddle.graphics.beginStroke(\"blue\").beginFill('gray').drawRoundRect(0, 0, humanWidth, humanHeight, 8);\n      this.paddle.alpha = 0.5;\n      // debugger\n      this.paddle.x = 338;\n      this.paddle.y = 360;\n      this.stage.addChild(this.paddle);\n      // const centerHumanPaddle = new createjs.Shape();\n      // centerHumanPaddle.graphics.beginStroke(\"blue\").beginFill('gray').drawRoundRect(338, 360, 124, 25, 16, 8);\n      // centerHumanPaddle.alpha = 0.5;\n      // this.stage.addChild(centerHumanPaddle);\n    } else {\n      this.paddle.graphics.beginStroke(\"red\").beginFill('gray').drawRoundRect(380, 388, aiWidth, aiHeight, 4);\n      this.paddle.alpha = 0.5;\n      // this.paddle.x = 380;\n      // this.paddle.y = 388;\n      this.stage.addChild(this.paddle);\n    }\n    this.stage.update();\n  }\n\n  // center() {\n  //  this.paddle.x -= this.width / 2;\n  //  this.paddle.y -= this.height / 2;\n  // }\n\n  defineBounds() {\n    if (this.type === 'Human') {\n      if (this.paddle.x > 710 - this.width) {\n        this.paddle.x = 710 - this.width;\n      } else if (this.paddle.x < 90) {\n        this.paddle.x = 90;\n      }\n\n      if (this.paddle.y < 190) {\n        this.paddle.y = 190;\n      } else if (this.paddle.y > 610 - this.height) {\n        this.paddle.y = 610 - this.height;\n      }\n    } else {\n      if (this.paddle.x > 478 - this.width) {\n        this.paddle.x = 478 - this.width;\n      } else if (this.paddle.x < 322) {\n        this.paddle.x = 322;\n      }\n\n      if (this.paddle.y < 348) {\n        this.paddle.y = 348;\n      } else if (this.paddle.y > 452 - this.height) {\n        this.paddle.y = 452 - this.height;\n      }\n    }\n  }\n\n  movePaddle() {\n    this.previousX = this.placeholderX;\n    this.previousY = this.placeholderY;\n\n    this.placeholderX = this.paddle.x;\n    this.placeholderY = this.paddle.y;\n\n    this.paddle.x = this.stage.mouseX - this.width / 2;\n    this.paddle.y = this.stage.mouseY - this.height / 2;\n\n    this.defineBounds();\n    this.stage.update();\n  }\n\n  spinVector() {\n    const xSpin = this.paddle.x - this.previousX;\n    const ySpin = this.paddle.y - this.previousY;\n\n    return [xSpin, ySpin];\n  }\n}\n\nexport default Paddle;\n","const Ai = 'Ai';\nconst Human = 'Human';\nimport Paddle from './paddle.js';\nimport Ball from './ball.js';\n\nclass Tunnel {\n  constructor(stage, game, difficulty) {\n    this.stage = stage;\n    this.game = game;\n    this.ticker = createjs.Ticker;\n    this.ticker.framerate = 60;\n    this.totalDistance = 180;\n    this.difficulty = difficulty;\n    this.drawTunnel();\n    this.aiPaddle = new Paddle(this.stage, this.game, Ai);\n    this.ball = new Ball(this.stage, this.game, this.totalDistance, this.difficulty);\n    this.humanPaddle = new Paddle(this.stage, this.game, Human);\n    this.tracker = new createjs.Shape();\n    this.drawTracker();\n    this.controlPaddle();\n    this.moveBall();\n    this.checkHit();\n  }\n\n  drawBorders() {\n    const border1 = new createjs.Shape();\n    border1.graphics.beginStroke(\"#28d36b\").drawRect(90, 190, 620, 420);\n    const border2 = new createjs.Shape();\n    border2.graphics.beginStroke(\"#28d36b\").drawRect(322, 348, 156, 104);\n    const border3 = new createjs.Shape();\n    border3.graphics.beginStroke(\"#28d36b\").drawRect(145, 230, 510, 340);\n    const border4 = new createjs.Shape();\n    border4.graphics.beginStroke(\"#28d36b\").drawRect(195, 265, 410, 270);\n    const border5 = new createjs.Shape();\n    border5.graphics.beginStroke(\"#28d36b\").drawRect(234, 289, 332, 222);\n    const border6 = new createjs.Shape();\n    border6.graphics.beginStroke(\"#28d36b\").drawRect(262, 308, 276, 184);\n    const border7 = new createjs.Shape();\n    border7.graphics.beginStroke(\"#28d36b\").drawRect(300, 334, 200, 132);\n    const border8 = new createjs.Shape();\n    border8.graphics.beginStroke(\"#28d36b\").drawRect(312, 341, 176, 118);\n    const border9 = new createjs.Shape();\n    border9.graphics.beginStroke(\"#28d36b\").drawRect(284, 325, 232, 154);\n\n    this.stage.addChild(border1);\n    this.stage.addChild(border2);\n    this.stage.addChild(border3);\n    this.stage.addChild(border4);\n    this.stage.addChild(border5);\n    this.stage.addChild(border6);\n    this.stage.addChild(border7);\n    this.stage.addChild(border8);\n    this.stage.addChild(border9);\n  }\n\n  drawCorners() {\n    const corner1 = new createjs.Shape();\n    corner1.graphics.beginStroke(\"#28d36b\").moveTo(90, 190).lineTo(322, 348);\n    const corner2 = new createjs.Shape();\n    corner2.graphics.beginStroke(\"#28d36b\").moveTo(710, 610).lineTo(478, 452);\n    const corner3 = new createjs.Shape();\n    corner3.graphics.beginStroke(\"#28d36b\").moveTo(710, 190).lineTo(478, 348);\n    const corner4 = new createjs.Shape();\n    corner4.graphics.beginStroke(\"#28d36b\").moveTo(90, 610).lineTo(322, 452);\n\n    this.stage.addChild(corner1);\n    this.stage.addChild(corner2);\n    this.stage.addChild(corner3);\n    this.stage.addChild(corner4);\n  }\n\n  drawTunnel() {\n    this.drawBorders();\n    this.drawCorners();\n    this.stage.update();\n  }\n\n  controlPaddle() {\n    // this.ticker.addEventListener('tick', this.aiPaddle.movePaddle.bind(this.aiPaddle));\n    this.ticker.addEventListener('tick', this.humanPaddle.movePaddle.bind(this.humanPaddle, this.ball));\n  }\n\n\n  checkHit() {\n    this.ticker.addEventListener('tick', this.hitOrNot.bind(this));\n  }\n\n  hitOrNot() {\n    if (this.ball.direction === 1 && this.ball.distance === this.totalDistance) {\n      if (this.hitX(this.aiPaddle) && this.hitY(this.aiPaddle)) {\n        // this.ball.xVelocity = this.aiPaddle.paddleVelocityX();\n        // debugger\n        // this.ball.yVelocity = this.aiPaddle.paddleVelocityY();\n        this.ball.direction = -1;\n      } else {\n        this.ball.direction = 0;\n        this.ticker.removeEventListener('tick', this.ball.moveThroughTunnel.bind(this.ball));\n        this.ticker.removeEventListener('tick', this.scaleTracker.bind(this));\n        this.handleFarBallFinish();\n      }\n    } else if (this.ball.direction === -1 && this.ball.distance === 0) {\n      if (this.hitX(this.humanPaddle) && this.hitY(this.humanPaddle)) {\n        // this.ball.xVelocity = this.humanPaddle.paddleVelocityX();\n        // this.ball.yVelocity = this.humanPaddle.paddleVelocityY();\n        this.getSpin();\n        this.ball.direction = 1;\n      } else {\n        this.ball.direction = 0;\n        this.ball.xVelocity = 0;\n        this.ball.yVelocity = 0;\n        this.ball.xSpin = 0;\n        this.ball.ySpin = 0;\n        this.ticker.removeEventListener('tick', this.ball.moveThroughTunnel.bind(this.ball));\n        this.ticker.removeEventListener('tick', this.scaleTracker.bind(this));\n        this.ball.draw(\"red\");\n      }\n    }\n  }\n\n  handleFarBallFinish() {\n    this.stage.removeChild(this.ball.ball);\n    const deadBall = new createjs.Shape();\n    deadBall.graphics\n      .beginRadialGradientFill([\"#fafafa\",\"red\"], [0, 1], 2, -2, .25, 0, 0, this.ball.ballRadius)\n      .drawCircle(0, 0, this.ball.ballRadius);\n    deadBall.x = this.ball.ball.x;\n    deadBall.y = this.ball.ball.y;\n    this.stage.addChild(deadBall);\n    this.stage.update();\n  }\n\n  hitX(paddle) {\n    const locator = (paddle.type === 'Human' ? paddle.paddle.x : paddle.paddle.graphics.command.x);\n    if (\n        (\n          (this.ball.ball.x - this.ball.ballRadius) <= (locator + paddle.width) &&\n          (this.ball.ball.x - this.ball.ballRadius) >= (locator)\n        ) ||\n      (\n          (this.ball.ball.x + this.ball.ballRadius) <= (locator + paddle.width) &&\n          (this.ball.ball.x + this.ball.ballRadius) >= (locator)\n        )\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  hitY(paddle) {\n    const locator = (paddle.type === 'Human' ? paddle.paddle.y : paddle.paddle.graphics.command.y);\n    if (\n        (\n          (this.ball.ball.y - this.ball.ballRadius) <= (locator + paddle.height) &&\n          (this.ball.ball.y - this.ball.ballRadius) >= locator\n        ) ||\n        (\n          (this.ball.ball.y + this.ball.ballRadius) <= (locator + paddle.height) &&\n          (this.ball.ball.y + this.ball.ballRadius) >= (locator)\n        )\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  scaleTracker() {\n    // for x and y positions of tracker, add to starting point pixel value proportional to\n    // the distance the ball itself has travelled\n    this.prevTrackerX = this.trackerX;\n    this.prevTrackerY = this.trackerY;\n    this.prevTrackerW = this.trackerW;\n    this.prevTrackerH = this.trackerH;\n    this.trackerX = 90 + ( (322 - 90) * (this.ball.distance / this.totalDistance));\n    this.trackerY = 190 + ( (348 - 190) * (this.ball.distance / this.totalDistance));\n    // for width and height, shrink by pixel value proportional to same\n    this.trackerW = 620 - ( (620 - 156) * (this.ball.distance / this.totalDistance));\n    this.trackerH = 420 - ( (420 - 104) * (this.ball.distance / this.totalDistance));\n    this.tracker.graphics.clear().beginStroke(\"white\").drawRect(this.trackerX, this.trackerY, this.trackerW, this.trackerH);\n    this.stage.update();\n  }\n\n  drawTracker() {\n    this.tracker.graphics.beginStroke(\"white\").drawRect(90, 190, 620, 420);\n    // this.tracker.x = 90;\n    // this.tracker.y = 190;\n    this.stage.addChild(this.tracker);\n    this.stage.update();\n  }\n\n  moveBall() {\n    this.ticker.addEventListener('tick', this.ball.moveThroughTunnel.bind(this.ball));\n    this.ticker.addEventListener('tick', this.scaleTracker.bind(this));\n    this.ticker.addEventListener('tick', this.detectWallBounce.bind(this));\n  }\n\n  // bounceBallOffWalls() {\n  //   debugger\n  //   if\n  //     (\n  //       (this.ball.ball.x - this.ball.ballRadius <= this.prevTrackerX) ||\n  //       (this.ball.ball.x + this.ball.ballRadius >= this.prevTrackerW + this.prevTrackerX)\n  //     )\n  //     {\n  //       this.ball.xVelocity = this.ball.xVelocity * -1;\n  //       this.stage.update();\n  //     }\n  //   else if\n  //     (\n  //       (this.ball.ball.y - this.ball.ballRadius <= this.prevTrackerY) ||\n  //       (this.ball.ball.y + this.ball.ballRadius >= this.prevTrackerH + this.prevTrackerY)\n  //     )\n  //     {\n  //       this.ball.yVelocity = this.ball.yVelocity * -1;\n  //       this.stage.update();\n  //     }\n  // }\n\n  detectWallBounce() {\n    if(this.ball.rawX >= 710 || this.ball.rawX <= 90){\n      this.ball.xVelocity = this.ball.xVelocity * -1;\n      this.ball.xSpin = 0;\n    }\n\n    if(this.ball.rawY >= 610 || this.ball.rawY <= 190){\n      this.ball.yVelocity = this.ball.yVelocity * -1;\n      this.ball.ySpin = 0;\n    }\n  }\n\n  getSpin() {\n    let [xSpin, ySpin] = this.humanPaddle.spinVector();\n    this.ball.xSpin += xSpin;\n    this.ball.ySpin += ySpin;\n  }\n}\n\nexport default Tunnel;\n"],"sourceRoot":""}